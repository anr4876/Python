cnt = 0

while cnt < 10 :
    print('aa', end='')
    print('bb')     
    cnt += 1
    
for i in range(1, 10, 1) :
    print("")


for i in range(1, 6, 1) :
    for j in range(1, 6, 1) :
        print (j, end=" ")
        
        
# 자료형
# 문자, 정수, 실수, 논리 => 단일자료형
# 컬렉션 자료형  => 리스트


kim = 90
lee = 77
choi = 100
park = 66
cho = 80


# 모든 변수의 값을 알고싶다. => 모든 변수명을 알아야한다.
# 데이터 => 변수에 저장 => 변수명
# 변수를 사용하려면 변수명 알아야함
# 학번 부여
# 데이터의 순서를 부여 


scores = [90, 77, 100, 66, 80]   # 변수에 순서를 주고 저장
print(scores[0])                 # 순서는 0부터
# print(scores[n - 1])   n번째 자료

print(kim)
print(cho)
print(park)
print(choi)
print(lee)

print(scores[0])
print(scores[1])
print(scores[2])
print(scores[3])
print(scores[4])

for i in range(5) :
    print(scores[i])
    
# 리스트 간단 사용법

list1 = [1, 2, 3, 4, 5, 6]   # 리스트

# 리스트 값을 사용하는 법 => 순번(인덱스)으로 접근
print(list1[3] + 2)

print(list1)

# 리스트안에 값을 변환하는 법 => 인덱스로 선택해서 대입
list1[0] = 100
print(list1)

# 값을 삭제 => del () => 지우고싶은 인덱스를 선택해서 del() 안에 삽입
del(list1[3])
print(list1) 

# 값을 추가 => append() => 추가하고싶은 값을 넣으면 됨

list1.append(10)

print(list1)

# 컬렉션 자료형 => 리스트, 튜플, 딕셔너리, 셋
# 추가, 조회, 수정, 삭제 사용가능

# 리스트
list1 = [1,2,3,4,5] # 리스트

# 리스트 사용법 - 객체의 일종. 객체 -> 객체만 사용할 수 있는 함수 => 메서드  # 교재 section 10 - 03
# 리스트 -> 다수의 데이터를 효율적으로 저장하고 관리. 추가, 조회, 수정, 삭제






# 리스트 데이터 다루는 법 

# ===================================================================================
# 가장 뒤에 추가 - append(추가할 값)
# ===================================================================================

print(list1)
list1.append(10)
print(list1)



# ===================================================================================
# 원하는 위치에 추가 - insert(추가할 위치, 추가할 값) - append의 사용성이 더 높음.
# ===================================================================================
list1.insert(0, 10)
print(list1)



# ===================================================================================
# 리스트 합치기 - exptend(합치고 싶은 리스트)
# ===================================================================================
list2 = [1,2,3]
list3 = [4,5,6]

list2.extend(list3) # list2와 list3를 합침.

print(list2)



# ===================================================================================
# 수정 - 수정을 원하는 인덱스 선택후 대입으로 수정. list[수정할인덱스] = 수정할 값
# ===================================================================================




list2[2] = 100
print(list2)

# ===================================================================================
# 조회 - 조회를 원하는 인덱스로 선택후 사용. list[조회할 인덱스]
# ===================================================================================
print(list2[2])



# ===================================================================================
# 원하는 위치 삭제 - 삭제를 원하는 인덱스로 선택후 del 키워드로 삭제. del list[삭제할 값의 인덱스]
# ===================================================================================
del list2[2]

print(list2)



# ===================================================================================
### 아래는 여러가지 삭제 버전입니다. 일단은 del만 이용해도 대부분 처리가 가능하니 del 위주로 사용하시되 필요한 경우 검색을 통해서 사용합니다.
### 한번씩 사용해 보는 걸로 충분하며 미리 외울 필요 X
# ===================================================================================

# 마지막 삭제 - pop()
list2.pop()
print(list2)

# 원하는 값으로 삭제 - remove(삭제하고 싶은 값)
list2.remove(4)
print(list2)

# 전체 삭제 - clear()
list2.clear()
print(list2)
